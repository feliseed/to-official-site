version: "3.8"
services:
    web:
        image: nginx:latest
        ports:
            - "8000:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www/html
        depends_on:
            - php
        networks:
            - app-network

    php:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
        platform: linux/x86_64
        volumes:
            - .:/var/www/html
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
            # アクセス速度向上のため、バインドマウントではなくDockerのボリュームvendor-storeにマウントする
            - vendor-store:/var/www/html/vendor
            # アクセス速度向上のため、バインドマウントではなくDockerのボリュームnode_modules-storeにマウントする
            - node_modules-store:/var/www/html/node_modules
        networks:
            - app-network
    
    # TOSのDBコンテナにアクセスするため、本リポジトリではDBコンテナは使用しません。
    # そのため、事前にTOSリポジトリ（https://github.com/feliseed/tos.git）側のDockerを起動しておく必要があります。
    # db:
    #     image: mysql:5.7
    #     platform: linux/x86_64
    #     command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    #     environment:
    #         #   MYSQL_DATABASE: laravel
    #         #   MYSQL_USER: root
    #         #   MYSQL_PASSWORD: password
    #         MYSQL_ROOT_PASSWORD: password
    #     volumes:
    #         #   - ./docker/mysql/mysql:/var/lib/mysql # データを永続化する場合はコメントを外す
    #         - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d # SQLファイルからデータ生成
    #     networks:
    #         - app-network
    #     ports:
    #         - "3306:3306"

    # phpmyadmin:
    #     image: phpmyadmin:latest
    #     platform: linux/x86_64
    #     environment:
    #         PMA_HOST: db
    #         PMA_PORT: 3306
    #         PMA_USER: root
    #         PMA_PASSWORD: password
    #         UPLOAD_LIMIT: 1G
    #         MEMORY_LIMIT: 1G
    #     ports:
    #         - "8080:80"
    #     depends_on:
    #         - db
    #     networks:
    #         - app-network

    # redis:
    #     image: redis:latest
    #     platform: linux/x86_64
    #     networks:
    #         - app-network

networks:
    app-network:
        driver: bridge

volumes:
    db_data:
    vendor-store:
    node_modules-store:
